#!/usr/bin/env bash
set -eu

usage() {
  echo >&2 "Usage: $0 <lib path>"
  echo >&2 "Example: $0 libs/2.31/libc.so.6"
  exit 2
}

if [[ $# != 1 ]]; then
  usage
fi

get_buildid() {
    eu-readelf -n "$1" | awk '/Build ID/ {print $3}'
}

path=$(realpath "$1")
dirp=$(dirname "$path")
echo "path = $path"
# echo "$dirp"

# sanity check
if file "$path" | grep -q debug_info; then
    echo >&2 "file already has debug_info. quitting!"
    exit 1
fi

bid=$(get_buildid "$path")
echo "Build ID = $bid"

if [[ ${#bid} -lt 40 ]]; then
    echo >&2 "invalid buildid"
    exit 1
fi

dbg_dir=$dirp
dbgfile=$(find "$dbg_dir" -name "*""${bid:2:48}""*")

if [[ -z $dbgfile ]]; then
    echo >&2 "debuginfo not found in $dbg_dir"
    echo >&2 "Falling back to search for old glibc 2.27 or below.."
    candidate=$(find "$dbg_dir"/.debug/lib -name "*$(basename "$path")*")
    if [[ -z $candidate ]]; then
        echo >&2 "fall back failed."
        exit 1
    fi
    dbgfile=$candidate
fi
echo "dbgfile = $dbgfile"

bid2=$(get_buildid "$dbgfile")
if [[ -z $bid2 ]]; then
    echo >&2 "buildid doesn't match: $bid != $bid2"
    exit 1
fi

eu-unstrip "$path" "$dbgfile"
ln -f "$dbgfile" "$path"
